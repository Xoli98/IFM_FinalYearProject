#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace fast_claims_v1._2.UTIL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="fastclaims-v1.2")]
	public partial class DatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_admin(tbl_admin instance);
    partial void Updatetbl_admin(tbl_admin instance);
    partial void Deletetbl_admin(tbl_admin instance);
    partial void Inserttbl_application(tbl_application instance);
    partial void Updatetbl_application(tbl_application instance);
    partial void Deletetbl_application(tbl_application instance);
    partial void Inserttbl_claimant(tbl_claimant instance);
    partial void Updatetbl_claimant(tbl_claimant instance);
    partial void Deletetbl_claimant(tbl_claimant instance);
    partial void Inserttbl_claimapplication(tbl_claimapplication instance);
    partial void Updatetbl_claimapplication(tbl_claimapplication instance);
    partial void Deletetbl_claimapplication(tbl_claimapplication instance);
    partial void Inserttbl_file(tbl_file instance);
    partial void Updatetbl_file(tbl_file instance);
    partial void Deletetbl_file(tbl_file instance);
    partial void Inserttbl_login(tbl_login instance);
    partial void Updatetbl_login(tbl_login instance);
    partial void Deletetbl_login(tbl_login instance);
    partial void Inserttbl_policyholder(tbl_policyholder instance);
    partial void Updatetbl_policyholder(tbl_policyholder instance);
    partial void Deletetbl_policyholder(tbl_policyholder instance);
    partial void Inserttbl_user(tbl_user instance);
    partial void Updatetbl_user(tbl_user instance);
    partial void Deletetbl_user(tbl_user instance);
    #endregion
		
		public DatabaseDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["fastclaims_v1_2ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_admin> tbl_admins
		{
			get
			{
				return this.GetTable<tbl_admin>();
			}
		}
		
		public System.Data.Linq.Table<tbl_application> tbl_applications
		{
			get
			{
				return this.GetTable<tbl_application>();
			}
		}
		
		public System.Data.Linq.Table<tbl_claimant> tbl_claimants
		{
			get
			{
				return this.GetTable<tbl_claimant>();
			}
		}
		
		public System.Data.Linq.Table<tbl_claimapplication> tbl_claimapplications
		{
			get
			{
				return this.GetTable<tbl_claimapplication>();
			}
		}
		
		public System.Data.Linq.Table<tbl_file> tbl_files
		{
			get
			{
				return this.GetTable<tbl_file>();
			}
		}
		
		public System.Data.Linq.Table<tbl_login> tbl_logins
		{
			get
			{
				return this.GetTable<tbl_login>();
			}
		}
		
		public System.Data.Linq.Table<tbl_policyholder> tbl_policyholders
		{
			get
			{
				return this.GetTable<tbl_policyholder>();
			}
		}
		
		public System.Data.Linq.Table<tbl_user> tbl_users
		{
			get
			{
				return this.GetTable<tbl_user>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_admin")]
	public partial class tbl_admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _admin_id;
		
		private int _login_id;
		
		private int _user_id;
		
		private EntitySet<tbl_application> _tbl_applications;
		
		private EntityRef<tbl_login> _tbl_login;
		
		private EntityRef<tbl_user> _tbl_user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onadmin_idChanging(int value);
    partial void Onadmin_idChanged();
    partial void Onlogin_idChanging(int value);
    partial void Onlogin_idChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    #endregion
		
		public tbl_admin()
		{
			this._tbl_applications = new EntitySet<tbl_application>(new Action<tbl_application>(this.attach_tbl_applications), new Action<tbl_application>(this.detach_tbl_applications));
			this._tbl_login = default(EntityRef<tbl_login>);
			this._tbl_user = default(EntityRef<tbl_user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int admin_id
		{
			get
			{
				return this._admin_id;
			}
			set
			{
				if ((this._admin_id != value))
				{
					this.Onadmin_idChanging(value);
					this.SendPropertyChanging();
					this._admin_id = value;
					this.SendPropertyChanged("admin_id");
					this.Onadmin_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login_id", DbType="Int NOT NULL")]
		public int login_id
		{
			get
			{
				return this._login_id;
			}
			set
			{
				if ((this._login_id != value))
				{
					if (this._tbl_login.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlogin_idChanging(value);
					this.SendPropertyChanging();
					this._login_id = value;
					this.SendPropertyChanged("login_id");
					this.Onlogin_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._tbl_user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_admin_tbl_application", Storage="_tbl_applications", ThisKey="admin_id", OtherKey="admin_id")]
		public EntitySet<tbl_application> tbl_applications
		{
			get
			{
				return this._tbl_applications;
			}
			set
			{
				this._tbl_applications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_login_tbl_admin", Storage="_tbl_login", ThisKey="login_id", OtherKey="login_id", IsForeignKey=true)]
		public tbl_login tbl_login
		{
			get
			{
				return this._tbl_login.Entity;
			}
			set
			{
				tbl_login previousValue = this._tbl_login.Entity;
				if (((previousValue != value) 
							|| (this._tbl_login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_login.Entity = null;
						previousValue.tbl_admins.Remove(this);
					}
					this._tbl_login.Entity = value;
					if ((value != null))
					{
						value.tbl_admins.Add(this);
						this._login_id = value.login_id;
					}
					else
					{
						this._login_id = default(int);
					}
					this.SendPropertyChanged("tbl_login");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_user_tbl_admin", Storage="_tbl_user", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public tbl_user tbl_user
		{
			get
			{
				return this._tbl_user.Entity;
			}
			set
			{
				tbl_user previousValue = this._tbl_user.Entity;
				if (((previousValue != value) 
							|| (this._tbl_user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_user.Entity = null;
						previousValue.tbl_admins.Remove(this);
					}
					this._tbl_user.Entity = value;
					if ((value != null))
					{
						value.tbl_admins.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("tbl_user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_applications(tbl_application entity)
		{
			this.SendPropertyChanging();
			entity.tbl_admin = this;
		}
		
		private void detach_tbl_applications(tbl_application entity)
		{
			this.SendPropertyChanging();
			entity.tbl_admin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_application")]
	public partial class tbl_application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _appl_id;
		
		private System.DateTime _date_created;
		
		private bool _isActive;
		
		private int _admin_id;
		
		private EntitySet<tbl_claimapplication> _tbl_claimapplications;
		
		private EntityRef<tbl_admin> _tbl_admin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onappl_idChanging(int value);
    partial void Onappl_idChanged();
    partial void Ondate_createdChanging(System.DateTime value);
    partial void Ondate_createdChanged();
    partial void OnisActiveChanging(bool value);
    partial void OnisActiveChanged();
    partial void Onadmin_idChanging(int value);
    partial void Onadmin_idChanged();
    #endregion
		
		public tbl_application()
		{
			this._tbl_claimapplications = new EntitySet<tbl_claimapplication>(new Action<tbl_claimapplication>(this.attach_tbl_claimapplications), new Action<tbl_claimapplication>(this.detach_tbl_claimapplications));
			this._tbl_admin = default(EntityRef<tbl_admin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_appl_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int appl_id
		{
			get
			{
				return this._appl_id;
			}
			set
			{
				if ((this._appl_id != value))
				{
					this.Onappl_idChanging(value);
					this.SendPropertyChanging();
					this._appl_id = value;
					this.SendPropertyChanged("appl_id");
					this.Onappl_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_created", DbType="Date NOT NULL")]
		public System.DateTime date_created
		{
			get
			{
				return this._date_created;
			}
			set
			{
				if ((this._date_created != value))
				{
					this.Ondate_createdChanging(value);
					this.SendPropertyChanging();
					this._date_created = value;
					this.SendPropertyChanged("date_created");
					this.Ondate_createdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit NOT NULL")]
		public bool isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin_id", DbType="Int NOT NULL")]
		public int admin_id
		{
			get
			{
				return this._admin_id;
			}
			set
			{
				if ((this._admin_id != value))
				{
					if (this._tbl_admin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onadmin_idChanging(value);
					this.SendPropertyChanging();
					this._admin_id = value;
					this.SendPropertyChanged("admin_id");
					this.Onadmin_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_application_tbl_claimapplication", Storage="_tbl_claimapplications", ThisKey="appl_id", OtherKey="appl_id")]
		public EntitySet<tbl_claimapplication> tbl_claimapplications
		{
			get
			{
				return this._tbl_claimapplications;
			}
			set
			{
				this._tbl_claimapplications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_admin_tbl_application", Storage="_tbl_admin", ThisKey="admin_id", OtherKey="admin_id", IsForeignKey=true)]
		public tbl_admin tbl_admin
		{
			get
			{
				return this._tbl_admin.Entity;
			}
			set
			{
				tbl_admin previousValue = this._tbl_admin.Entity;
				if (((previousValue != value) 
							|| (this._tbl_admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_admin.Entity = null;
						previousValue.tbl_applications.Remove(this);
					}
					this._tbl_admin.Entity = value;
					if ((value != null))
					{
						value.tbl_applications.Add(this);
						this._admin_id = value.admin_id;
					}
					else
					{
						this._admin_id = default(int);
					}
					this.SendPropertyChanged("tbl_admin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_claimapplications(tbl_claimapplication entity)
		{
			this.SendPropertyChanging();
			entity.tbl_application = this;
		}
		
		private void detach_tbl_claimapplications(tbl_claimapplication entity)
		{
			this.SendPropertyChanging();
			entity.tbl_application = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_claimant")]
	public partial class tbl_claimant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _claimaint_id;
		
		private int _login_id;
		
		private string _email;
		
		private System.Nullable<int> _iddocument;
		
		private EntityRef<tbl_file> _tbl_file;
		
		private EntityRef<tbl_login> _tbl_login;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onclaimaint_idChanging(int value);
    partial void Onclaimaint_idChanged();
    partial void Onlogin_idChanging(int value);
    partial void Onlogin_idChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OniddocumentChanging(System.Nullable<int> value);
    partial void OniddocumentChanged();
    #endregion
		
		public tbl_claimant()
		{
			this._tbl_file = default(EntityRef<tbl_file>);
			this._tbl_login = default(EntityRef<tbl_login>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_claimaint_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int claimaint_id
		{
			get
			{
				return this._claimaint_id;
			}
			set
			{
				if ((this._claimaint_id != value))
				{
					this.Onclaimaint_idChanging(value);
					this.SendPropertyChanging();
					this._claimaint_id = value;
					this.SendPropertyChanged("claimaint_id");
					this.Onclaimaint_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login_id", DbType="Int NOT NULL")]
		public int login_id
		{
			get
			{
				return this._login_id;
			}
			set
			{
				if ((this._login_id != value))
				{
					if (this._tbl_login.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlogin_idChanging(value);
					this.SendPropertyChanging();
					this._login_id = value;
					this.SendPropertyChanged("login_id");
					this.Onlogin_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(254) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iddocument", DbType="Int")]
		public System.Nullable<int> iddocument
		{
			get
			{
				return this._iddocument;
			}
			set
			{
				if ((this._iddocument != value))
				{
					if (this._tbl_file.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniddocumentChanging(value);
					this.SendPropertyChanging();
					this._iddocument = value;
					this.SendPropertyChanged("iddocument");
					this.OniddocumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_file_tbl_claimant", Storage="_tbl_file", ThisKey="iddocument", OtherKey="fileId", IsForeignKey=true)]
		public tbl_file tbl_file
		{
			get
			{
				return this._tbl_file.Entity;
			}
			set
			{
				tbl_file previousValue = this._tbl_file.Entity;
				if (((previousValue != value) 
							|| (this._tbl_file.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_file.Entity = null;
						previousValue.tbl_claimants.Remove(this);
					}
					this._tbl_file.Entity = value;
					if ((value != null))
					{
						value.tbl_claimants.Add(this);
						this._iddocument = value.fileId;
					}
					else
					{
						this._iddocument = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_file");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_login_tbl_claimant", Storage="_tbl_login", ThisKey="login_id", OtherKey="login_id", IsForeignKey=true)]
		public tbl_login tbl_login
		{
			get
			{
				return this._tbl_login.Entity;
			}
			set
			{
				tbl_login previousValue = this._tbl_login.Entity;
				if (((previousValue != value) 
							|| (this._tbl_login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_login.Entity = null;
						previousValue.tbl_claimants.Remove(this);
					}
					this._tbl_login.Entity = value;
					if ((value != null))
					{
						value.tbl_claimants.Add(this);
						this._login_id = value.login_id;
					}
					else
					{
						this._login_id = default(int);
					}
					this.SendPropertyChanged("tbl_login");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_claimapplications")]
	public partial class tbl_claimapplication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _appl_id;
		
		private string _deceased_id;
		
		private int _claimant_id;
		
		private int _claim_number;
		
		private System.Nullable<int> _deceaced_deathcert;
		
		private EntityRef<tbl_application> _tbl_application;
		
		private EntityRef<tbl_file> _tbl_file;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onappl_idChanging(int value);
    partial void Onappl_idChanged();
    partial void Ondeceased_idChanging(string value);
    partial void Ondeceased_idChanged();
    partial void Onclaimant_idChanging(int value);
    partial void Onclaimant_idChanged();
    partial void Onclaim_numberChanging(int value);
    partial void Onclaim_numberChanged();
    partial void Ondeceaced_deathcertChanging(System.Nullable<int> value);
    partial void Ondeceaced_deathcertChanged();
    #endregion
		
		public tbl_claimapplication()
		{
			this._tbl_application = default(EntityRef<tbl_application>);
			this._tbl_file = default(EntityRef<tbl_file>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_appl_id", DbType="Int NOT NULL")]
		public int appl_id
		{
			get
			{
				return this._appl_id;
			}
			set
			{
				if ((this._appl_id != value))
				{
					if (this._tbl_application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onappl_idChanging(value);
					this.SendPropertyChanging();
					this._appl_id = value;
					this.SendPropertyChanged("appl_id");
					this.Onappl_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deceased_id", DbType="VarChar(14) NOT NULL", CanBeNull=false)]
		public string deceased_id
		{
			get
			{
				return this._deceased_id;
			}
			set
			{
				if ((this._deceased_id != value))
				{
					this.Ondeceased_idChanging(value);
					this.SendPropertyChanging();
					this._deceased_id = value;
					this.SendPropertyChanged("deceased_id");
					this.Ondeceased_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_claimant_id", DbType="Int NOT NULL")]
		public int claimant_id
		{
			get
			{
				return this._claimant_id;
			}
			set
			{
				if ((this._claimant_id != value))
				{
					this.Onclaimant_idChanging(value);
					this.SendPropertyChanging();
					this._claimant_id = value;
					this.SendPropertyChanged("claimant_id");
					this.Onclaimant_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_claim_number", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int claim_number
		{
			get
			{
				return this._claim_number;
			}
			set
			{
				if ((this._claim_number != value))
				{
					this.Onclaim_numberChanging(value);
					this.SendPropertyChanging();
					this._claim_number = value;
					this.SendPropertyChanged("claim_number");
					this.Onclaim_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deceaced_deathcert", DbType="Int")]
		public System.Nullable<int> deceaced_deathcert
		{
			get
			{
				return this._deceaced_deathcert;
			}
			set
			{
				if ((this._deceaced_deathcert != value))
				{
					if (this._tbl_file.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondeceaced_deathcertChanging(value);
					this.SendPropertyChanging();
					this._deceaced_deathcert = value;
					this.SendPropertyChanged("deceaced_deathcert");
					this.Ondeceaced_deathcertChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_application_tbl_claimapplication", Storage="_tbl_application", ThisKey="appl_id", OtherKey="appl_id", IsForeignKey=true)]
		public tbl_application tbl_application
		{
			get
			{
				return this._tbl_application.Entity;
			}
			set
			{
				tbl_application previousValue = this._tbl_application.Entity;
				if (((previousValue != value) 
							|| (this._tbl_application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_application.Entity = null;
						previousValue.tbl_claimapplications.Remove(this);
					}
					this._tbl_application.Entity = value;
					if ((value != null))
					{
						value.tbl_claimapplications.Add(this);
						this._appl_id = value.appl_id;
					}
					else
					{
						this._appl_id = default(int);
					}
					this.SendPropertyChanged("tbl_application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_file_tbl_claimapplication", Storage="_tbl_file", ThisKey="deceaced_deathcert", OtherKey="fileId", IsForeignKey=true)]
		public tbl_file tbl_file
		{
			get
			{
				return this._tbl_file.Entity;
			}
			set
			{
				tbl_file previousValue = this._tbl_file.Entity;
				if (((previousValue != value) 
							|| (this._tbl_file.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_file.Entity = null;
						previousValue.tbl_claimapplications.Remove(this);
					}
					this._tbl_file.Entity = value;
					if ((value != null))
					{
						value.tbl_claimapplications.Add(this);
						this._deceaced_deathcert = value.fileId;
					}
					else
					{
						this._deceaced_deathcert = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_file");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_file")]
	public partial class tbl_file : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _fileId;
		
		private string _name;
		
		private System.Data.Linq.Binary _file;
		
		private EntitySet<tbl_claimant> _tbl_claimants;
		
		private EntitySet<tbl_claimapplication> _tbl_claimapplications;
		
		private EntitySet<tbl_policyholder> _tbl_policyholders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfileIdChanging(int value);
    partial void OnfileIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnfileChanging(System.Data.Linq.Binary value);
    partial void OnfileChanged();
    #endregion
		
		public tbl_file()
		{
			this._tbl_claimants = new EntitySet<tbl_claimant>(new Action<tbl_claimant>(this.attach_tbl_claimants), new Action<tbl_claimant>(this.detach_tbl_claimants));
			this._tbl_claimapplications = new EntitySet<tbl_claimapplication>(new Action<tbl_claimapplication>(this.attach_tbl_claimapplications), new Action<tbl_claimapplication>(this.detach_tbl_claimapplications));
			this._tbl_policyholders = new EntitySet<tbl_policyholder>(new Action<tbl_policyholder>(this.attach_tbl_policyholders), new Action<tbl_policyholder>(this.detach_tbl_policyholders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fileId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int fileId
		{
			get
			{
				return this._fileId;
			}
			set
			{
				if ((this._fileId != value))
				{
					this.OnfileIdChanging(value);
					this.SendPropertyChanging();
					this._fileId = value;
					this.SendPropertyChanged("fileId");
					this.OnfileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[file]", Storage="_file", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary file
		{
			get
			{
				return this._file;
			}
			set
			{
				if ((this._file != value))
				{
					this.OnfileChanging(value);
					this.SendPropertyChanging();
					this._file = value;
					this.SendPropertyChanged("file");
					this.OnfileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_file_tbl_claimant", Storage="_tbl_claimants", ThisKey="fileId", OtherKey="iddocument")]
		public EntitySet<tbl_claimant> tbl_claimants
		{
			get
			{
				return this._tbl_claimants;
			}
			set
			{
				this._tbl_claimants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_file_tbl_claimapplication", Storage="_tbl_claimapplications", ThisKey="fileId", OtherKey="deceaced_deathcert")]
		public EntitySet<tbl_claimapplication> tbl_claimapplications
		{
			get
			{
				return this._tbl_claimapplications;
			}
			set
			{
				this._tbl_claimapplications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_file_tbl_policyholder", Storage="_tbl_policyholders", ThisKey="fileId", OtherKey="iddocument")]
		public EntitySet<tbl_policyholder> tbl_policyholders
		{
			get
			{
				return this._tbl_policyholders;
			}
			set
			{
				this._tbl_policyholders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_claimants(tbl_claimant entity)
		{
			this.SendPropertyChanging();
			entity.tbl_file = this;
		}
		
		private void detach_tbl_claimants(tbl_claimant entity)
		{
			this.SendPropertyChanging();
			entity.tbl_file = null;
		}
		
		private void attach_tbl_claimapplications(tbl_claimapplication entity)
		{
			this.SendPropertyChanging();
			entity.tbl_file = this;
		}
		
		private void detach_tbl_claimapplications(tbl_claimapplication entity)
		{
			this.SendPropertyChanging();
			entity.tbl_file = null;
		}
		
		private void attach_tbl_policyholders(tbl_policyholder entity)
		{
			this.SendPropertyChanging();
			entity.tbl_file = this;
		}
		
		private void detach_tbl_policyholders(tbl_policyholder entity)
		{
			this.SendPropertyChanging();
			entity.tbl_file = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_login")]
	public partial class tbl_login : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _login_id;
		
		private string _username;
		
		private string _password;
		
		private EntitySet<tbl_admin> _tbl_admins;
		
		private EntitySet<tbl_claimant> _tbl_claimants;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onlogin_idChanging(int value);
    partial void Onlogin_idChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
		
		public tbl_login()
		{
			this._tbl_admins = new EntitySet<tbl_admin>(new Action<tbl_admin>(this.attach_tbl_admins), new Action<tbl_admin>(this.detach_tbl_admins));
			this._tbl_claimants = new EntitySet<tbl_claimant>(new Action<tbl_claimant>(this.attach_tbl_claimants), new Action<tbl_claimant>(this.detach_tbl_claimants));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int login_id
		{
			get
			{
				return this._login_id;
			}
			set
			{
				if ((this._login_id != value))
				{
					this.Onlogin_idChanging(value);
					this.SendPropertyChanging();
					this._login_id = value;
					this.SendPropertyChanged("login_id");
					this.Onlogin_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_login_tbl_admin", Storage="_tbl_admins", ThisKey="login_id", OtherKey="login_id")]
		public EntitySet<tbl_admin> tbl_admins
		{
			get
			{
				return this._tbl_admins;
			}
			set
			{
				this._tbl_admins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_login_tbl_claimant", Storage="_tbl_claimants", ThisKey="login_id", OtherKey="login_id")]
		public EntitySet<tbl_claimant> tbl_claimants
		{
			get
			{
				return this._tbl_claimants;
			}
			set
			{
				this._tbl_claimants.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_admins(tbl_admin entity)
		{
			this.SendPropertyChanging();
			entity.tbl_login = this;
		}
		
		private void detach_tbl_admins(tbl_admin entity)
		{
			this.SendPropertyChanging();
			entity.tbl_login = null;
		}
		
		private void attach_tbl_claimants(tbl_claimant entity)
		{
			this.SendPropertyChanging();
			entity.tbl_login = this;
		}
		
		private void detach_tbl_claimants(tbl_claimant entity)
		{
			this.SendPropertyChanging();
			entity.tbl_login = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_policyholder")]
	public partial class tbl_policyholder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _holder_id;
		
		private int _user_id;
		
		private int _login_id;
		
		private int _id_number;
		
		private System.Nullable<int> _iddocument;
		
		private EntityRef<tbl_file> _tbl_file;
		
		private EntityRef<tbl_user> _tbl_user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onholder_idChanging(int value);
    partial void Onholder_idChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onlogin_idChanging(int value);
    partial void Onlogin_idChanged();
    partial void Onid_numberChanging(int value);
    partial void Onid_numberChanged();
    partial void OniddocumentChanging(System.Nullable<int> value);
    partial void OniddocumentChanged();
    #endregion
		
		public tbl_policyholder()
		{
			this._tbl_file = default(EntityRef<tbl_file>);
			this._tbl_user = default(EntityRef<tbl_user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_holder_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int holder_id
		{
			get
			{
				return this._holder_id;
			}
			set
			{
				if ((this._holder_id != value))
				{
					this.Onholder_idChanging(value);
					this.SendPropertyChanging();
					this._holder_id = value;
					this.SendPropertyChanged("holder_id");
					this.Onholder_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._tbl_user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login_id", DbType="Int NOT NULL")]
		public int login_id
		{
			get
			{
				return this._login_id;
			}
			set
			{
				if ((this._login_id != value))
				{
					this.Onlogin_idChanging(value);
					this.SendPropertyChanging();
					this._login_id = value;
					this.SendPropertyChanged("login_id");
					this.Onlogin_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_number", DbType="Int NOT NULL")]
		public int id_number
		{
			get
			{
				return this._id_number;
			}
			set
			{
				if ((this._id_number != value))
				{
					this.Onid_numberChanging(value);
					this.SendPropertyChanging();
					this._id_number = value;
					this.SendPropertyChanged("id_number");
					this.Onid_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iddocument", DbType="Int")]
		public System.Nullable<int> iddocument
		{
			get
			{
				return this._iddocument;
			}
			set
			{
				if ((this._iddocument != value))
				{
					if (this._tbl_file.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniddocumentChanging(value);
					this.SendPropertyChanging();
					this._iddocument = value;
					this.SendPropertyChanged("iddocument");
					this.OniddocumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_file_tbl_policyholder", Storage="_tbl_file", ThisKey="iddocument", OtherKey="fileId", IsForeignKey=true)]
		public tbl_file tbl_file
		{
			get
			{
				return this._tbl_file.Entity;
			}
			set
			{
				tbl_file previousValue = this._tbl_file.Entity;
				if (((previousValue != value) 
							|| (this._tbl_file.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_file.Entity = null;
						previousValue.tbl_policyholders.Remove(this);
					}
					this._tbl_file.Entity = value;
					if ((value != null))
					{
						value.tbl_policyholders.Add(this);
						this._iddocument = value.fileId;
					}
					else
					{
						this._iddocument = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_file");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_user_tbl_policyholder", Storage="_tbl_user", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public tbl_user tbl_user
		{
			get
			{
				return this._tbl_user.Entity;
			}
			set
			{
				tbl_user previousValue = this._tbl_user.Entity;
				if (((previousValue != value) 
							|| (this._tbl_user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_user.Entity = null;
						previousValue.tbl_policyholders.Remove(this);
					}
					this._tbl_user.Entity = value;
					if ((value != null))
					{
						value.tbl_policyholders.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("tbl_user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_user")]
	public partial class tbl_user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_id;
		
		private string _firstname;
		
		private string _lastname;
		
		private string _email;
		
		private EntitySet<tbl_admin> _tbl_admins;
		
		private EntitySet<tbl_policyholder> _tbl_policyholders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void OnfirstnameChanging(string value);
    partial void OnfirstnameChanged();
    partial void OnlastnameChanging(string value);
    partial void OnlastnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public tbl_user()
		{
			this._tbl_admins = new EntitySet<tbl_admin>(new Action<tbl_admin>(this.attach_tbl_admins), new Action<tbl_admin>(this.detach_tbl_admins));
			this._tbl_policyholders = new EntitySet<tbl_policyholder>(new Action<tbl_policyholder>(this.attach_tbl_policyholders), new Action<tbl_policyholder>(this.detach_tbl_policyholders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstname", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string firstname
		{
			get
			{
				return this._firstname;
			}
			set
			{
				if ((this._firstname != value))
				{
					this.OnfirstnameChanging(value);
					this.SendPropertyChanging();
					this._firstname = value;
					this.SendPropertyChanged("firstname");
					this.OnfirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastname", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string lastname
		{
			get
			{
				return this._lastname;
			}
			set
			{
				if ((this._lastname != value))
				{
					this.OnlastnameChanging(value);
					this.SendPropertyChanging();
					this._lastname = value;
					this.SendPropertyChanged("lastname");
					this.OnlastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(254)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_user_tbl_admin", Storage="_tbl_admins", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<tbl_admin> tbl_admins
		{
			get
			{
				return this._tbl_admins;
			}
			set
			{
				this._tbl_admins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_user_tbl_policyholder", Storage="_tbl_policyholders", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<tbl_policyholder> tbl_policyholders
		{
			get
			{
				return this._tbl_policyholders;
			}
			set
			{
				this._tbl_policyholders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_admins(tbl_admin entity)
		{
			this.SendPropertyChanging();
			entity.tbl_user = this;
		}
		
		private void detach_tbl_admins(tbl_admin entity)
		{
			this.SendPropertyChanging();
			entity.tbl_user = null;
		}
		
		private void attach_tbl_policyholders(tbl_policyholder entity)
		{
			this.SendPropertyChanging();
			entity.tbl_user = this;
		}
		
		private void detach_tbl_policyholders(tbl_policyholder entity)
		{
			this.SendPropertyChanging();
			entity.tbl_user = null;
		}
	}
}
#pragma warning restore 1591
